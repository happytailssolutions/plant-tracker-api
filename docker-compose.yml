version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: plant-tracker-postgres
    restart: unless-stopped
    environment:
      POSTGRES_DB: plant_tracker
      POSTGRES_USER: plant_user
      POSTGRES_PASSWORD: plant_password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - plant-tracker-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U plant_user -d plant_tracker"]
      interval: 10s
      timeout: 5s
      retries: 5

  # NestJS API
  api:
    build:
      context: .
      dockerfile: Dockerfile
      target: production
    container_name: plant-tracker-api
    restart: unless-stopped
    ports:
      - "3000:3000"
    environment:
      NODE_ENV: development
      PORT: 3000
      DATABASE_URL: postgresql://plant_user:plant_password@postgres:5432/plant_tracker
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - plant-tracker-network
    healthcheck:
      test: ["CMD", "node", "-e", "require('http').get('http://localhost:3000/health', (res) => { process.exit(res.statusCode === 200 ? 0 : 1) })"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

volumes:
  postgres_data:
    driver: local

networks:
  plant-tracker-network:
    driver: bridge 